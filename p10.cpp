#include "basic_functions.h"
#include "p1.h"
#include "p2.h"
#include "p4.h"
#include "p5.h"
#include "p6.h"
#include "p7.h"
#include "p8.h"
#include "p9.h"


// make lists of instructions


// P1
// ADD  2, 0, 0        # Reg(2)  =			00000000 00000000 00000000 00000010
// SW   2, 14          # Mem[14] =			00001111 00001101 00000010 00000000
// LI   1, 1           # Reg(1)  = 			00011110 00000001 00000000 00000001
// ADD  2, 1, 1        # Reg(2)  = 			00000000 00000001 00000001 00000010
// SW   2, 0           # Mem[0]  = 			00001111 00000000 00000010 00000000
// LI   3, 10          # Reg(3)  = 			00011110 00000011 00000000 00001010
// SUB  4, 3, 1        # Reg(4)  = 			00000001 00000011 00000001 00000100
// SW   4, 2           # Mem[2]  = 			00001111 00000010 00000100 00000000
// LW   5, 0           # Reg(5)  = 			00001110 00000000 00000101 00000000
// AND  6, 5, 4        # Reg(6)  = 			00000110 00000101 00000100 00000110
// SW   6, 4           # Mem[4]  = 			00001111 00000100 00000110 00000000
// OR   7, 3, 1        # Reg(7)  = 			00000111 00000011 00000001 00000111
// SW   7, 6           # Mem[6]  = 			00001111 00000110 00000111 00000000
// NEG  1, 7           # Reg(1)  = 			00000010 00000111 00000001 00000000
// SW   1, 8           # Mem[8]  = 			00001111 00001000 00000001 00000000
// LW   3, 14          # Reg(3)  = 			00001110 00011010 00000011 00000000
// SLL  4, 7           # Reg(4)  =			00001000 00000111 00000100 00000000
// SW   4, 12          # Mem[12] =			00001111 00001100 00000100 00000000
// SRL  4, 7           # Reg(4)  =			00001001 00000111 00000100 00000000
// SW   4, 14          # Mem[14] =			00001111 00001110 00000100 00000000
// MULT 7, 5, 2        # Reg(7)  =			00001011 00000101 00000010 00000111
// DIV  2, 5, 2        # Reg(2)  =			00001101 00000101 00000010 00000010
// ADDU 3, 1, 7        # Reg(3)  =			00010000 00000001 00000111 00000011
// SUBU 4, 1, 7        # Reg(4)  =			00010001 00000001 00000111 00000100


// P2
// void main() {
//   int sum = 0;
//   int i;
//   for (i = 1; i < 10; i++) {
//      if (i % 2 == 0) {
//         sum += i;
//      }
//   }
//}
